# Generated by Django 4.0.1 on 2022-03-08 18:03

import central_api.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdministrationSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChiefComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('value', models.CharField(max_length=1024)),
                ('sortOrder', models.IntegerField()),
                ('active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ConceptMedicationForms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=1024)),
                ('isDeleted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ConceptMedicationUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=1024)),
                ('isDeleted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ConceptPrescriptionAdministration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email_address', models.CharField(max_length=30, unique=True)),
                ('phone_number', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CSVUploadDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='csv/')),
                ('mode_option', models.CharField(choices=[('1', 'New'), ('2', 'Update')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='DatabaseStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('value', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Deleted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('date', models.DateField()),
                ('feedback', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='fEMRUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InternetStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('status', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='KitStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('value', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='KitUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('value', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, null=True)),
                ('text', models.CharField(blank=True, max_length=1024, null=True)),
                ('isDeleted', models.BooleanField()),
                ('conceptMedicationForm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.conceptmedicationforms')),
            ],
        ),
        migrations.CreateModel(
            name='MedicationGenerics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=1024, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageOfTheDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=2048)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MissionCity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MissionCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MissionTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('location', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=1024, unique=True)),
                ('active', models.BooleanField()),
                ('contract_start_date', models.DateField()),
                ('address1', models.CharField(blank=True, max_length=1024, null=True)),
                ('address2', models.CharField(blank=True, max_length=1024, null=True)),
                ('zip_coden_ned_dafult_text_filed', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='MissionTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('state_date', models.DateField()),
                ('end_date', models.DateField()),
                ('mission_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missioncity')),
                ('mission_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missionteam', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetworkStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('value', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30)),
                ('age', models.IntegerField(null=True)),
                ('sex_assigned_at_birth', models.CharField(choices=[('f', 'Female'), ('m', 'Male'), ('o', 'Other')], max_length=6, null=True)),
                ('current_address', models.CharField(blank=True, max_length=30, null=True)),
                ('address1', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address line 1')),
                ('address2', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Address line 2')),
                ('social_security_number', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4)])),
                ('zip_code', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='ZIP / Postal code')),
                ('city', models.CharField(blank=True, max_length=1024, null=True, verbose_name='City')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('phone_number_type', models.CharField(blank=True, max_length=30, null=True)),
                ('shared_phone_number', models.BooleanField()),
                ('email_address', models.CharField(blank=True, max_length=40, null=True)),
                ('shared_email_address', models.BooleanField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('campaign', models.ManyToManyField(default=1, to='central_api.MissionTrip')),
                ('deleted', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.deleted')),
            ],
        ),
        migrations.CreateModel(
            name='PatientAgeClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=1024)),
                ('isDeleted', models.BooleanField()),
                ('sortOrder', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PatientEncounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(null=True, unique=True)),
                ('date_of_triage_visit', models.DateTimeField(null=True)),
                ('date_of_medical_visit', models.TimeField(auto_now_add=True, null=True)),
                ('date_of_pharmacy_visit', models.TimeField(auto_now_add=True, null=True)),
                ('date_of_diabetes_screen', models.TimeField(auto_now_add=True, null=True)),
                ('is_diabetes_screened', models.BooleanField(null=True)),
                ('body_height_primary', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(8), django.core.validators.MinValueValidator(0)])),
                ('body_height_secondary', models.FloatField(blank=True, null=True, validators=[central_api.models.ModifiedMaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('body_weight', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(0.25)])),
                ('bmi_percentile', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('weight_for_length_percentile', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('head_occipital_frontal_circumference_percentile', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('body_mass_index', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(0)])),
                ('weeks_pregnant', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(45), django.core.validators.MinValueValidator(0)])),
                ('smoking', models.BooleanField(default=False)),
                ('history_of_diabetes', models.BooleanField(default=False)),
                ('history_of_hypertension', models.BooleanField(default=False)),
                ('history_of_high_cholesterol', models.BooleanField(default=False)),
                ('alcohol', models.BooleanField(default=False)),
                ('patient_history', models.CharField(blank=True, max_length=1000, null=True)),
                ('community_health_worker_notes', models.CharField(blank=True, max_length=500, null=True)),
                ('procedure', models.CharField(blank=True, max_length=1000, null=True)),
                ('pharmacy_notes', models.CharField(blank=True, max_length=1000, null=True)),
                ('medical_history', models.CharField(blank=True, max_length=1000, null=True)),
                ('social_history', models.CharField(blank=True, max_length=1000, null=True)),
                ('current_medications', models.CharField(blank=True, max_length=1000, null=True)),
                ('family_history', models.CharField(blank=True, max_length=1000, null=True)),
                ('timestamp', models.DateTimeField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('campaign', models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='central_api.missiontrip')),
                ('chief_complaint', models.ManyToManyField(blank=True, to='central_api.ChiefComplaint')),
                ('chief_complaints', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chief_complaint', to='central_api.chiefcomplaint')),
            ],
        ),
        migrations.CreateModel(
            name='PatientEncounterPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_id', models.IntegerField()),
                ('patient_encounter', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PatientPrescriptionReplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PatientPrescriptionReplacementReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('description', models.CharField(max_length=3072)),
                ('file_path', models.CharField(max_length=1024)),
                ('insertTS', models.DateField(null=True)),
                ('photo', models.BinaryField()),
                ('photoFile', models.FileField(blank=True, null=True, upload_to='photos/')),
                ('imaging_link', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField()),
                ('description', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30)),
                ('userId', models.IntegerField()),
                ('dateCreated', models.DateTimeField()),
                ('isDeleted', models.BooleanField()),
                ('leftColumnSize', models.IntegerField()),
                ('rightColumnSize', models.IntegerField()),
                ('isCustom', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='TabFieldSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TabFieldType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitsSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units', models.CharField(choices=[('i', 'Imperial'), ('m', 'Metric')], default='i', max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('data_type', models.CharField(max_length=30, null=True)),
                ('unitOfMeasurement', models.CharField(max_length=30, null=True)),
                ('deleted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=30)),
                ('lastLogin', models.DateTimeField()),
                ('deleted', models.BooleanField()),
                ('passwordReset', models.BooleanField()),
                ('notes', models.CharField(max_length=1024)),
                ('passwordCreatedDate', models.DateTimeField()),
                ('dateCreated', models.DateTimeField()),
                ('createdBy', models.IntegerField(unique=True)),
                ('missionTrips', models.ManyToManyField(related_name='user_mission_trips', to='central_api.MissionTrip')),
                ('roles', models.ManyToManyField(to='central_api.Roles')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('administration_schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.administrationschedule')),
                ('diagnosis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.diagnosis')),
                ('encounter', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter')),
                ('medication', models.ManyToManyField(blank=True, to='central_api.Medication')),
                ('prescriber', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.femruser')),
            ],
        ),
        migrations.CreateModel(
            name='TabFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('isDeleted', models.BooleanField()),
                ('order', models.IntegerField(null=True)),
                ('placeholder', models.CharField(max_length=30, null=True)),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.tab')),
                ('tabFieldSize', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.tabfieldsize')),
                ('tabFieldType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.tabfieldtype')),
            ],
        ),
        migrations.AddField(
            model_name='tab',
            name='tabFields',
            field=models.ManyToManyField(related_name='tab_tab_fields', to='central_api.TabFields'),
        ),
        migrations.CreateModel(
            name='PatientPrescriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('amount', models.IntegerField(null=True)),
                ('dateTaken', models.DateTimeField()),
                ('specialInstructions', models.CharField(max_length=1024, null=True)),
                ('isCounseled', models.BooleanField()),
                ('dateDispensed', models.DateTimeField()),
                ('conceptPrescriptionAdministration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.conceptprescriptionadministration')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.medication')),
                ('patientEncounter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter')),
                ('patientPrescriptionReplacements', models.ManyToManyField(to='central_api.PatientPrescriptionReplacement')),
                ('physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.user')),
            ],
        ),
        migrations.AddField(
            model_name='patientprescriptionreplacement',
            name='originalPrescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescription_replacement_original_prescription', to='central_api.patientprescriptions'),
        ),
        migrations.AddField(
            model_name='patientprescriptionreplacement',
            name='patientPrescriptionReplacementReason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.patientprescriptionreplacementreason'),
        ),
        migrations.AddField(
            model_name='patientprescriptionreplacement',
            name='replacementPrescription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescription_replacement_replacement_prescription', to='central_api.patientprescriptions'),
        ),
        migrations.CreateModel(
            name='PatientEncounterVital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('userId', models.CharField(max_length=30)),
                ('patientEncounterId', models.IntegerField()),
                ('vitalValue', models.FloatField()),
                ('dateTaken', models.CharField(max_length=30)),
                ('diastolic_blood_pressure', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('systolic_blood_pressure', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('mean_arterial_pressure', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('heart_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(170), django.core.validators.MinValueValidator(40)])),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(1)])),
                ('body_temperature', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('oxygen_concentration', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(70)])),
                ('glucose_level', models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(500), django.core.validators.MinValueValidator(1)])),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter')),
                ('vital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.vital')),
            ],
        ),
        migrations.CreateModel(
            name='PatientEncounterTabFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('userId', models.IntegerField()),
                ('patientEncounterId', models.IntegerField()),
                ('tabFieldValue', models.CharField(max_length=30)),
                ('dateTaken', models.DateTimeField()),
                ('isDeleted', models.DateTimeField(null=True)),
                ('deletedByUserId', models.IntegerField(null=True)),
                ('chiefComplaint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.chiefcomplaint')),
                ('tabField', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.tabfields')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.user')),
            ],
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_encounter_doctor', to='central_api.user'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='mission_trip_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_encounter_mission_trip_id', to='central_api.missiontrip'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='nurse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_encounter_nurse', to='central_api.user'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_encounter_patient', to='central_api.patient'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='patient_age_classification',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientageclassification'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='pharmacist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_encounter_pharmacist', to='central_api.user'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='photos',
            field=models.ManyToManyField(blank=True, to='central_api.Photo'),
        ),
        migrations.AddField(
            model_name='patientencounter',
            name='user_id_diabetes_screen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.user'),
        ),
        migrations.CreateModel(
            name='PatientDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.ManyToManyField(to='central_api.Diagnosis')),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='patientencounter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_patient_encounter', to='central_api.patientencounter'),
        ),
        migrations.AddField(
            model_name='patient',
            name='photo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.photo'),
        ),
        migrations.AddField(
            model_name='patient',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.state'),
        ),
        migrations.AddField(
            model_name='missiontrip',
            name='user',
            field=models.ManyToManyField(to='central_api.User'),
        ),
        migrations.AddField(
            model_name='missionteam',
            name='mission_trips',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missiontrip'),
        ),
        migrations.AddField(
            model_name='missioncity',
            name='mission_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missioncountry'),
        ),
        migrations.CreateModel(
            name='MedicationInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('quantityCurrent', models.IntegerField()),
                ('quantityInitial', models.IntegerField()),
                ('isDeleted', models.DateTimeField(null=True)),
                ('timeAdded', models.DateTimeField()),
                ('createdBy', models.IntegerField()),
                ('strength', models.CharField(blank=True, max_length=25, null=True)),
                ('count', models.PositiveIntegerField(default=0)),
                ('item_number', models.CharField(blank=True, max_length=25, null=True)),
                ('box_number', models.CharField(blank=True, max_length=25, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.inventorycategory')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.inventoryform')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.manufacturer')),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_inventory_medication', to='central_api.medication')),
                ('missionTrip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missiontrip')),
            ],
        ),
        migrations.CreateModel(
            name='MedicationGenericStrength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('isDenominator', models.BooleanField()),
                ('value', models.FloatField(unique=True)),
                ('conceptMedicationUnit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.conceptmedicationunit')),
                ('medicationGeneric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.medicationgenerics')),
            ],
        ),
        migrations.AddField(
            model_name='medication',
            name='medicationGenericStrengths',
            field=models.ManyToManyField(to='central_api.MedicationGenericStrength'),
        ),
        migrations.AddField(
            model_name='medication',
            name='medicationInventory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medication_medication_inventory', to='central_api.medicationinventory'),
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.IntegerField(unique=True)),
                ('ip_address', models.BinaryField(null=True)),
                ('loginDate', models.DateTimeField(null=True)),
                ('isSuccessful', models.BooleanField()),
                ('usernameAttempt', models.CharField(max_length=1024)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.user')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entries', models.ManyToManyField(to='central_api.InventoryEntry')),
            ],
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('admins', models.ManyToManyField(related_name='instance_admins', to='central_api.fEMRUser')),
                ('main_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instance_main_contact', to='central_api.femruser')),
                ('organization', models.ForeignKey(default=central_api.models.get_test_org, on_delete=django.db.models.deletion.CASCADE, to='central_api.organization')),
            ],
            options={
                'verbose_name': 'Operation',
            },
        ),
        migrations.CreateModel(
            name='HistoryOfPresentIllness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('onset', models.CharField(blank=True, max_length=50, null=True)),
                ('provokes', models.CharField(blank=True, max_length=50, null=True)),
                ('palliates', models.CharField(blank=True, max_length=50, null=True)),
                ('quality', models.CharField(blank=True, max_length=50, null=True)),
                ('radiation', models.CharField(blank=True, max_length=50, null=True)),
                ('severity', models.CharField(blank=True, max_length=50, null=True)),
                ('time_of_day', models.CharField(blank=True, max_length=50, null=True)),
                ('narrative', models.CharField(blank=True, max_length=4000, null=True)),
                ('physical_examination', models.CharField(blank=True, max_length=4000, null=True)),
                ('tests_ordered', models.CharField(blank=True, max_length=255, null=True)),
                ('chief_complaint', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='central_api.chiefcomplaint')),
                ('encounter', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter')),
            ],
        ),
        migrations.CreateModel(
            name='DatabaseChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('instance', models.CharField(max_length=64)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('username', models.CharField(max_length=256, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='central_api.missiontrip')),
            ],
        ),
        migrations.AddField(
            model_name='chiefcomplaint',
            name='patientEncounter',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.patientencounter'),
        ),
        migrations.CreateModel(
            name='AuditEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=64)),
                ('ip', models.GenericIPAddressField(null=True)),
                ('username', models.CharField(max_length=256, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('browser_user_agent', models.CharField(max_length=256, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='central_api.missiontrip')),
            ],
        ),
    ]
